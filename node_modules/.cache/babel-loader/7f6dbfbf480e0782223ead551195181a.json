{"ast":null,"code":"var _jsxFileName = \"/home/seniorcl13/teste_frontend/viacep_challenge/src/components/Address/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { Formik, Field, Form } from 'formik';\nimport UIButton from 'components/UI/Button/Button';\nimport './Form.css';\nimport Loader from 'components/UI/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  cep: '',\n  rua: '',\n  numero: '',\n  bairro: '',\n  cidade: '',\n  estado: '',\n  complemento: '',\n  ponto_referencia: ''\n};\n\nconst AddressForm = ({\n  id\n}) => {\n  _s();\n\n  // const [values, setValues] = useState(id ? null : initialValue)\n  const history = useHistory();\n\n  async function onBlur(ev, setFieldValue) {\n    const {\n      value\n    } = ev.target;\n    const cep = value === null || value === void 0 ? void 0 : value.replace(/[^0-9]/g, ''); // if (cep?.lenght !== 8){\n    //   return;\n    // }\n\n    const response = await axios.get(`https://viacep.com.br/ws/${cep}/json/`);\n    const {\n      data\n    } = response;\n    console.log(data);\n    setFieldValue('rua', data.logradouro);\n    setFieldValue('bairro', data.bairro);\n    setFieldValue('cidade', data.localidade);\n    setFieldValue('estado', data.uf);\n  }\n\n  async function loadData(id) {\n    const response = await axios.get(`http://localhost:5000/address/${id}`);\n    return response.data;\n  } // useEffect(() => {\n  //   if (id) {\n  //     loadData(id);\n  //     // axios.get(`http://localhost:5000/address/${id}`)\n  //     //   .then((response) => {\n  //     //     console.log(response);\n  //     //     setValues(response.data)\n  //     //     console.log(values);\n  //     //   })\n  //   }\n  // }, []);\n\n\n  function onSubmit(values) {\n    const method = id ? 'put' : 'post';\n    const url = id ? `http://localhost:5000/address/${id}` : 'http://localhost:5000/address';\n    axios[method](url, values).then(() => {\n      history.push('/');\n    }); // console.log(values);\n  } // function onChange(ev) {\n  //   const { name, value } = ev.target;\n  //   setValues({...values, [name]: value});\n  // }\n\n\n  const values = id ? loadData : initialValue;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: id ? 'Editar endereço' : 'Novo endereço'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), !values ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this) : console.log(values) // <Formik \n    //   onSubmit={onSubmit}\n    //   validateOnMount\n    //   initialValues={values}\n    //   render={({ setFieldValue }) => (\n    //     <Form>\n    //       <div className='address-form__group'>\n    //         <label htmlFor='nome'>Nome</label>\n    //         <Field name='nome' type='text' />\n    //         <label htmlFor='cep'>CEP</label>\n    //         <Field name='cep' type='text' onBlur={(ev) => onBlur(ev, setFieldValue)} />\n    //         <label htmlFor='rua'>Rua</label>\n    //         <Field name='rua' type='text' disabled />\n    //         <label htmlFor='numero'>Número</label>\n    //         <Field name='numero' type='text' />                  \n    //         <label htmlFor='bairro'>Bairro</label>\n    //         <Field name='bairro' type='text' disabled/>\n    //         <label htmlFor='cidade'>Cidade</label>\n    //         <Field name='cidade' type='text' disabled/>\n    //         <label htmlFor='estado' disabled>Estado</label>\n    //         <Field name='estado' type='text' disabled />\n    //         <label htmlFor='complemento'>Complemento</label>\n    //         <Field name='complemento' type='text' />\n    //         <label htmlFor='pont_referencia'>Ponto de referência</label>\n    //         <Field name='ponto_referencia' type='text' />\n    //         <div>\n    //           <UIButton type='submit' theme='contained'>Salvar</UIButton>\n    //         </div>\n    //       </div>\n    //     </Form>  \n    , \"/> )}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddressForm, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["/home/seniorcl13/teste_frontend/viacep_challenge/src/components/Address/Form/Form.js"],"names":["React","useState","useEffect","axios","useHistory","Formik","Field","Form","UIButton","Loader","initialValue","cep","rua","numero","bairro","cidade","estado","complemento","ponto_referencia","AddressForm","id","history","onBlur","ev","setFieldValue","value","target","replace","response","get","data","console","log","logradouro","localidade","uf","loadData","onSubmit","values","method","url","then","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { Formik, Field, Form } from 'formik';\n\n\nimport UIButton from 'components/UI/Button/Button';\nimport './Form.css';\nimport Loader from 'components/UI/Loader/Loader';\n\nconst initialValue = {\n  cep: '',\n  rua: '',\n  numero: '',\n  bairro: '',\n  cidade: '',\n  estado: '',\n  complemento: '',\n  ponto_referencia: '',\n}\n\nconst AddressForm = ({ id }) => {\n  // const [values, setValues] = useState(id ? null : initialValue)\n  const history = useHistory();\n\n  async function onBlur(ev, setFieldValue) {\n    const { value } = ev.target\n\n    const cep = value?.replace(/[^0-9]/g, '');\n\n    // if (cep?.lenght !== 8){\n    //   return;\n    // }\n\n    const response = await axios.get(`https://viacep.com.br/ws/${cep}/json/`);\n    const { data } = response;\n\n    console.log(data);\n\n    setFieldValue('rua', data.logradouro);\n    setFieldValue('bairro', data.bairro);\n    setFieldValue('cidade', data.localidade);\n    setFieldValue('estado', data.uf);\n\n  }\n\n  async function loadData(id) {\n    const response = await axios.get(`http://localhost:5000/address/${id}`);\n\n    return response.data;\n  }\n\n  // useEffect(() => {\n  //   if (id) {\n      \n  //     loadData(id);\n  //     // axios.get(`http://localhost:5000/address/${id}`)\n  //     //   .then((response) => {\n  //     //     console.log(response);\n  //     //     setValues(response.data)\n  //     //     console.log(values);\n  //     //   })\n  //   }\n  // }, []);\n\n  function onSubmit(values) {\n    const method = id ? 'put' : 'post';\n    const url = id \n      ? `http://localhost:5000/address/${id}`\n      : 'http://localhost:5000/address'\n    \n    axios[method](url, values)\n      .then(() => {\n        history.push('/');\n      });\n\n    // console.log(values);\n  }\n\n  // function onChange(ev) {\n  //   const { name, value } = ev.target;\n\n  //   setValues({...values, [name]: value});\n  // }\n\n  const values = id ? loadData : initialValue;\n\n  return (\n    <div>\n      <h1>{id ? 'Editar endereço' : 'Novo endereço'}</h1>\n\n      {!values \n        ? ( \n          <Loader />\n        ) : (\n          console.log(values)\n          // <Formik \n          //   onSubmit={onSubmit}\n          //   validateOnMount\n          //   initialValues={values}\n          //   render={({ setFieldValue }) => (\n          //     <Form>\n          //       <div className='address-form__group'>\n          //         <label htmlFor='nome'>Nome</label>\n          //         <Field name='nome' type='text' />\n          //         <label htmlFor='cep'>CEP</label>\n          //         <Field name='cep' type='text' onBlur={(ev) => onBlur(ev, setFieldValue)} />\n          //         <label htmlFor='rua'>Rua</label>\n          //         <Field name='rua' type='text' disabled />\n          //         <label htmlFor='numero'>Número</label>\n          //         <Field name='numero' type='text' />                  \n          //         <label htmlFor='bairro'>Bairro</label>\n          //         <Field name='bairro' type='text' disabled/>\n          //         <label htmlFor='cidade'>Cidade</label>\n          //         <Field name='cidade' type='text' disabled/>\n          //         <label htmlFor='estado' disabled>Estado</label>\n          //         <Field name='estado' type='text' disabled />\n          //         <label htmlFor='complemento'>Complemento</label>\n          //         <Field name='complemento' type='text' />\n          //         <label htmlFor='pont_referencia'>Ponto de referência</label>\n          //         <Field name='ponto_referencia' type='text' />\n          //         <div>\n          //           <UIButton type='submit' theme='contained'>Salvar</UIButton>\n          //         </div>\n          //       </div>\n          //     </Form>  \n            )}\n          />\n        )}\n    </div>\n  );\n}\n\nexport default AddressForm;"]},"metadata":{},"sourceType":"module"}