{"ast":null,"code":"var _jsxFileName = \"/home/seniorcl13/teste_frontend/viacep_challenge/src/components/Address/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { Formik, Field, Form } from 'formik';\nimport UIButton from 'components/UI/Button/Button';\nimport './Form.css';\nimport Loader from 'components/UI/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  cep: '',\n  rua: '',\n  numero: '',\n  bairro: '',\n  cidade: '',\n  estado: '',\n  complemento: '',\n  ponto_referencia: ''\n};\n\nconst AddressForm = ({\n  id\n}) => {\n  _s();\n\n  const [values, setValues] = useState(id ? null : initialValue);\n  const history = useHistory();\n\n  async function onBlur(ev, setFieldValue) {\n    const {\n      value\n    } = ev.target;\n    const cep = value === null || value === void 0 ? void 0 : value.replace(/[^0-9]/g, '');\n\n    if ((cep === null || cep === void 0 ? void 0 : cep.lenght) !== 8) {\n      return;\n    }\n\n    const response = await axios.get(`https://viacep.com.br/ws/${cep}/json/`);\n    const {\n      data\n    } = response;\n    console.log(data);\n    setFieldValue('rua', data.logradouro);\n    setFieldValue('bairro', data.bairro);\n    setFieldValue('cidade', data.localidade);\n    setFieldValue('estado', data.uf);\n  } // async function onBlurCep(ev) {\n  //   const { value } = ev.target;\n  //   const cep = value?.replace(/[^0-9]/g, '');\n  //   // if (cep?.lenght !== 8) {\n  //   //   return ;\n  //   // }\n  //   const response = await axios.get(`https://viacep.com.br/ws/${cep}/json`);\n  //   const { data } = response;\n  //   console.log(data.logradouro);\n  //   setValues({...values, 'rua': data.logradouro});\n  //   console.log(values.rua);\n  //   setValues({...values, 'bairro': data.bairro});\n  //   setValues({...values, 'cidade': data.localidade});\n  //   setValues({...values, 'estado': data.uf});\n  //   console.log(values.estado);\n  //   // console.log(values);\n  //   // fetch(`https://viacep.com.br/ws/${cep}/json`)\n  //   //   .then((res) => res.json())\n  //   //   .then((data) => {\n  //   //     setValues({...values, 'rua': data.logradouro});\n  //   //     setValues({...values, 'bairro': data.bairro});\n  //   //     setValues({...values, 'cidade': data.localidade});\n  //   //     setValues({...values, 'estado': data.uf});\n  //   //   })\n  //   // console.log(values);\n  //   // const response = await axios.get(`https://viacep.com.br/ws/${value}/json`);\n  //   // console.log(response.data);\n  // }\n\n\n  useEffect(() => {\n    if (id) {\n      axios.get(`http://localhost:5000/address/${id}`).then(response => {\n        console.log(response);\n        setValues(response.data);\n      });\n    }\n  }, [id]);\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n    const method = id ? 'put' : 'post';\n    const url = id ? `http://localhost:5000/address/${id}` : 'http://localhost:5000/address';\n    axios[method](url, values).then(response => {\n      history.push('/');\n    }); // console.log(values);\n  }\n\n  function onChange(ev) {\n    const {\n      name,\n      value\n    } = ev.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: id ? 'Editar endereço' : 'Novo endereço'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), !values ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: onSubmit,\n      validateOnMount: true,\n      initialValues: initialValue,\n      render: ({\n        isValid,\n        setFieldValue\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"address-form__group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nome\",\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"nome\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cep\",\n          children: \"CEP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"cep\",\n          type: \"text\",\n          onBlur: ev => onBlur(ev, setFieldValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rua\",\n          children: \"Rua\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"rua\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numero\",\n          children: \"N\\xFAmero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"numero\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bairro\",\n          children: \"Bairro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"bairro\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cidade\",\n          children: \"Cidade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"cidade\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"estado\",\n          children: \"Estado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"estado\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"complemento\",\n          children: \"Complemento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"complemento\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pont_referencia\",\n          children: \"Ponto de refer\\xEAncia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"ponto_referencia\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(UIButton, {\n            type: \"submit\",\n            theme: \"contained\",\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }, this) // <form onSubmit={onSubmit}>\n    //   <div className='address-form__group'>\n    //     <label htmlFor='nome'>Nome</label>\n    //     <input id='nome' name='nome' value={values.nome} onChange={onChange}/>\n    //     <label htmlFor='cep'>CEP</label>\n    //     <input id='cep' onBlur={onBlurCep} name='cep' value={values.cep} onChange={onChange}/>\n    //     <label htmlFor='rua'>Rua</label>\n    //     <input id='rua' name='rua' value={values.rua} onChange={onChange} />\n    //     <label htmlFor='numero'>Número</label>\n    //     <input id='numero' name='numero' value={values.numero} onChange={onChange} />                  \n    //     <label htmlFor='bairro'>Bairro</label>\n    //     <input id='bairro' name='bairro' value={values.bairro} onChange={onChange} />\n    //     <label htmlFor='cidade'>Cidade</label>\n    //     <input id='cidade' name='cidade' value={values.cidade} onChange={onChange} />\n    //     <label htmlFor='estado'>Estado</label>\n    //     <input id='estado' name='estado' value={values.estado} onChange={onChange} />\n    //     <label htmlFor='complemento'>Complemento</label>\n    //     <input id='complemento' name='complemento' value={values.complemento} onChange={onChange} />\n    //     <label htmlFor='pont_referencia'>Ponto de referência</label>\n    //     <input id='ponto_referencia' name='ponto_referencia' value={values.ponto_referencia} onChange={onChange} />\n    //     <div>\n    //       <UIButton type='submit' theme='contained'>Salvar</UIButton>\n    //     </div>\n    //   </div>\n    // </form>\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddressForm, \"lQM06T4glpZbjcs5CqHosSZdB9E=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["/home/seniorcl13/teste_frontend/viacep_challenge/src/components/Address/Form/Form.js"],"names":["React","useState","useEffect","axios","useHistory","Formik","Field","Form","UIButton","Loader","initialValue","cep","rua","numero","bairro","cidade","estado","complemento","ponto_referencia","AddressForm","id","values","setValues","history","onBlur","ev","setFieldValue","value","target","replace","lenght","response","get","data","console","log","logradouro","localidade","uf","then","onSubmit","preventDefault","method","url","push","onChange","name","isValid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { Formik, Field, Form } from 'formik';\n\n\nimport UIButton from 'components/UI/Button/Button';\nimport './Form.css';\nimport Loader from 'components/UI/Loader/Loader';\n\nconst initialValue = {\n  cep: '',\n  rua: '',\n  numero: '',\n  bairro: '',\n  cidade: '',\n  estado: '',\n  complemento: '',\n  ponto_referencia: '',\n}\n\nconst AddressForm = ({ id }) => {\n  const [values, setValues] = useState(id ? null : initialValue)\n  const history = useHistory();\n\n  async function onBlur(ev, setFieldValue) {\n    const { value } = ev.target\n\n    const cep = value?.replace(/[^0-9]/g, '');\n\n    if (cep?.lenght !== 8){\n      return;\n    }\n\n    const response = await axios.get(`https://viacep.com.br/ws/${cep}/json/`);\n    const { data } = response;\n\n    console.log(data);\n\n    setFieldValue('rua', data.logradouro);\n    setFieldValue('bairro', data.bairro);\n    setFieldValue('cidade', data.localidade);\n    setFieldValue('estado', data.uf);\n\n  }\n\n  // async function onBlurCep(ev) {\n  //   const { value } = ev.target;\n    \n  //   const cep = value?.replace(/[^0-9]/g, '');\n\n  //   // if (cep?.lenght !== 8) {\n  //   //   return ;\n  //   // }\n\n  //   const response = await axios.get(`https://viacep.com.br/ws/${cep}/json`);\n  //   const { data } = response;\n  //   console.log(data.logradouro);\n  //   setValues({...values, 'rua': data.logradouro});\n  //   console.log(values.rua);\n  //   setValues({...values, 'bairro': data.bairro});\n  //   setValues({...values, 'cidade': data.localidade});\n  //   setValues({...values, 'estado': data.uf});\n  //   console.log(values.estado);\n\n\n\n\n  //   // console.log(values);\n\n  //   // fetch(`https://viacep.com.br/ws/${cep}/json`)\n  //   //   .then((res) => res.json())\n  //   //   .then((data) => {\n  //   //     setValues({...values, 'rua': data.logradouro});\n  //   //     setValues({...values, 'bairro': data.bairro});\n  //   //     setValues({...values, 'cidade': data.localidade});\n  //   //     setValues({...values, 'estado': data.uf});\n\n  //   //   })\n\n  //   // console.log(values);\n  //   // const response = await axios.get(`https://viacep.com.br/ws/${value}/json`);\n  //   // console.log(response.data);\n  // }\n\n  useEffect(() => {\n    if (id) {\n      axios.get(`http://localhost:5000/address/${id}`)\n        .then((response) => {\n          console.log(response);\n          setValues(response.data)\n        })\n    }\n  }, [id]);\n\n  function onSubmit(ev) {\n    ev.preventDefault();\n\n    const method = id ? 'put' : 'post';\n    const url = id \n      ? `http://localhost:5000/address/${id}`\n      : 'http://localhost:5000/address'\n    \n    axios[method](url, values)\n      .then((response) => {\n        history.push('/');\n      });\n\n    // console.log(values);\n  }\n\n  function onChange(ev) {\n    const { name, value } = ev.target;\n\n    setValues({...values, [name]: value});\n  }\n\n  return (\n    <div>\n      <h1>{id ? 'Editar endereço' : 'Novo endereço'}</h1>\n\n      {!values \n        ? (\n          <Loader />\n        ) : (\n          <Formik \n            onSubmit={onSubmit}\n            validateOnMount\n            initialValues={initialValue}\n            render={({ isValid, setFieldValue }) => (\n              <div className='address-form__group'>\n                <label htmlFor='nome'>Nome</label>\n                <Field name='nome' type='text' />\n                <label htmlFor='cep'>CEP</label>\n                <Field name='cep' type='text' onBlur={(ev) => onBlur(ev, setFieldValue)} />\n                <label htmlFor='rua'>Rua</label>\n                <Field name='rua' type='text' />\n                <label htmlFor='numero'>Número</label>\n                <Field name='numero' type='text' />                  \n                <label htmlFor='bairro'>Bairro</label>\n                <Field name='bairro' type='text' />\n                <label htmlFor='cidade'>Cidade</label>\n                <Field name='cidade' type='text' />\n                <label htmlFor='estado'>Estado</label>\n                <Field name='estado' type='text' />\n                <label htmlFor='complemento'>Complemento</label>\n                <Field name='complemento' type='text' />\n                <label htmlFor='pont_referencia'>Ponto de referência</label>\n                <Field name='ponto_referencia' type='text' />\n                <div>\n                  <UIButton type='submit' theme='contained'>Salvar</UIButton>\n                </div>\n              </div>\n            )}\n          />\n          // <form onSubmit={onSubmit}>\n          //   <div className='address-form__group'>\n          //     <label htmlFor='nome'>Nome</label>\n          //     <input id='nome' name='nome' value={values.nome} onChange={onChange}/>\n          //     <label htmlFor='cep'>CEP</label>\n          //     <input id='cep' onBlur={onBlurCep} name='cep' value={values.cep} onChange={onChange}/>\n          //     <label htmlFor='rua'>Rua</label>\n          //     <input id='rua' name='rua' value={values.rua} onChange={onChange} />\n          //     <label htmlFor='numero'>Número</label>\n          //     <input id='numero' name='numero' value={values.numero} onChange={onChange} />                  \n          //     <label htmlFor='bairro'>Bairro</label>\n          //     <input id='bairro' name='bairro' value={values.bairro} onChange={onChange} />\n          //     <label htmlFor='cidade'>Cidade</label>\n          //     <input id='cidade' name='cidade' value={values.cidade} onChange={onChange} />\n          //     <label htmlFor='estado'>Estado</label>\n          //     <input id='estado' name='estado' value={values.estado} onChange={onChange} />\n          //     <label htmlFor='complemento'>Complemento</label>\n          //     <input id='complemento' name='complemento' value={values.complemento} onChange={onChange} />\n          //     <label htmlFor='pont_referencia'>Ponto de referência</label>\n          //     <input id='ponto_referencia' name='ponto_referencia' value={values.ponto_referencia} onChange={onChange} />\n          //     <div>\n          //       <UIButton type='submit' theme='contained'>Salvar</UIButton>\n          //     </div>\n          //   </div>\n          // </form>\n        )}\n    </div>\n  );\n}\n\nexport default AddressForm;"]},"metadata":{},"sourceType":"module"}